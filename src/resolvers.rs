pub fn return_ipv4_resolvers() -> Vec<String> {
    // DNS were validate with dnsvalidator the 03/09/2020
    vec![
        // Cloudflare
        "1.1.1.1",
        "1.0.0.1",
        // Google
        "8.8.8.8",
        "8.8.4.4",
        // Quad9
        "9.9.9.9",
        "149.112.112.112",
        // OpenDNS
        "208.67.222.222",
        "208.67.220.220",
        // Verisign
        "64.6.64.6",
        "64.6.65.6",
        // UncensoredDNS
        "91.239.100.100",
        "89.233.43.71",
        // dns.watch
        "84.200.69.80",
        "84.200.70.40",
    ]
    .into_iter()
    .map(str::to_owned)
    .collect()
}

#[allow(dead_code)]
pub fn return_ipv6_resolvers() -> Vec<String> {
    vec![
        "2001:4860:4860::8888",
        "2001:450:2005:1::4",
        "2600::2",
        "2600::1",
        "2001:1bc0::ffff:bbbb:2",
        "2001:1bc0::ffff:aaaa:2",
        "2001:418:3ff::1:53",
        "2001:450:2005:3::5",
        "2001:418:3ff::53",
        "2001:4860:4860::8844",
        "2001:910:800::12",
        "2001:910:800::40",
        "2001:450:2005:2::5",
        "2001:450:2005:2::4",
        "2a02:2178:1:2::2",
        "2001:4f8:0:2::14",
        "2001:b08:2:280::4:1",
        "2001:1a68::d911:2244",
        "2620:0:ccc::2",
        "2620:0:ccd::2",
        "2001:978:1:1::d",
        "2001:978:1:2::d",
        "2001:550:1:1::d",
        "2001:470:0:45::2",
        "2001:468:c80:2101:0:100:0:22",
        "2001:468:c80:4101:0:100:0:42",
        "2001:4870:8000:3::100",
        "2001:4870:8000:3::5",
        "2001:840:200::",
        "2001:840:2010:413::100",
        "2407:9000:0:4::2",
        "2001:638:902:1::10",
        "2001:1488:800:400::130",
        "2a02:6b8::feed:0ff",
        "2001:913::8",
        "2a00:5881:8100:1000::3",
        "2001:428:101:100:205:171:2:65",
        "2001:428:101:100:205:171:3:65",
        "2001:428::1",
        "2001:468:C80:2101::100:0:22",
        "2001:468:C80:4101::100:0:42",
        "2001:67c:2b0::1",
        "2001:67c:2b0::2",
        "2001:b000:168::1",
        "2001:bf0::2",
        "2001:67c:15e8:d1::18",
        "2001:67c:15e8:d1::19",
        "2001:67c:2b24:1000::10",
        "2001:67c:2b24:1000::11",
        "2620:74:1b::1:1",
        "2620:74:1c::2:2",
        "2610:a1:1018::5",
        "2610:a1:1019::5",
        "2610:a1:1018::22",
        "2610:a1:1019::22",
        "2610:a1:1018::23",
        "2610:a1:1019::23",
        "2610:a1:1019::24",
        "2610:a1:1019::25",
        "2610:a1:1019::26",
        "2610:a1:1019::27",
        "2610:a1:1019::28",
        "2610:a1:1019::29",
        "2610:a1:1019::30",
        "2610:a1:1019::31",
        "2610:a1:1019::32",
        "2610:a1:1019::33",
        "2610:a1:1019::34",
        "2610:a1:1019::35",
        "2610:a1:1018::24",
        "2610:a1:1018::25",
        "2610:a1:1018::26",
        "2610:a1:1018::27",
        "2610:a1:1018::28",
        "2610:a1:1018::29",
        "2610:a1:1018::30",
        "2610:a1:1018::31",
        "2610:a1:1018::32",
        "2610:a1:1018::33",
        "2610:a1:1018::34",
        "2610:a1:1018::35",
        "2a01:4f8:141:4281::3000",
        "2602:3f:e75c:1bff::1",
        "2a00:5884:8218::1",
        "2001:1608:10:25::1c04:b12f",
        "2001:67c:28a4::",
        "2c0f:fda8:5::2ed1:d2ec",
        "2a01:3a0:53:53::",
        "2a02:6b8:0:1::feed:0ff",
        "2a02:6b8::feed:bad",
        "2a02:6b8:0:1::feed:bad",
        "2a02:6b8::feed:a11",
        "2a02:6b8:0:1::feed:a11",
        "2a02:2750:221:1:0:0:0:92",
        "2a01:780:c000:2:0:0:0:1",
        "2a01:a740:0:0:0:0:0:b",
        "2a01:780:c000:1:0:0:0:1",
        "2001:bf0:0:0:0:0:0:2",
        "2a00:aa40:0:225:0:0:0:2",
        "2607:f778:0:9:0:0:0:2",
        "2001:4870:8000:3:0:0:0:5",
        "2001:4b8:3:201:0:0:0:902",
        "2001:4b8:2:101:0:0:0:602",
        "2602:ffaa:0:0:0:0:2:2",
        "2001:468:c80:6101:0:100:0:62",
        "2001:1bc0:0:0:0:ffff:aaaa:2",
        "2001:1bc0:0:0:0:ffff:bbbb:2",
        "2803:c800:0:38:0:0:0:2",
        "2001:df4:b400:221:0:0:0:1",
        "2001:df4:b400:221:0:0:0:2",
        "2a00:1390:1:0:0:0:0:1",
        "2a02:2720:2:0:0:0:0:2",
        "2a02:2720:1:0:0:0:0:1",
        "2a00:1908:0:0:0:0:0:74",
        "2a00:8b00:0:a:0:0:0:53",
        "2804:ac:cafe:0:0:0:0:10",
        "2001:DF0:2BA::101",
        "2001:df0:2ba:0:0:0:0:101",
        "2a00:1908:0:0:0:0:0:72",
        "2a00:1908:0:0:0:0:0:73",
        "2001:550:1:2::D",
        "2001:738:6001:B0B0::1000",
        "2a02:6b8::feed:ff",
        "2a03:8600:1001::2",
        "2606:ed00:2:babe::10",
        "2001:b000:168::2",
        "2620:fe::fe",
        "2620:fe::10",
        "2a00:5a60::ad1:0ff",
        "2a00:5a60::ad2:0ff",
        "2a01:4f8:172:2414:250:56ff:fe00:a9cc",
        "2606:4700:4700::1111",
        "2606:4700:4700::1001",
        "2a03:4000:1c:50a::1",
        "2001:41d0:2:73d4::125",
        "2001:41d0:2:73d4::100",
        "2a00:1a28:1157:3ef::2",
        "2001:470:1f06:10b::2",
        "2a01:238:42f6:ac00:2a29:4f7f:b6d:ef46",
        "2001:de4::101",
        "2001:de4::102",
        "2a00:1b70:1200:1::53",
        "2a00:1b70:1200:1::1:53",
        "2a00:1b70:1200:1::64",
        "2001:470:b411:80:3063:36ff:fe38:3533",
        "2001:da8::666",
        "2001:41d0:203:4b1f:2:2:2:2",
        "2001:41d0:604:a7:3:3:3:3",
        "2001:c38:2000:2421::154",
        "2a0d:2a00:1::2",
        "2a0d:2a00:2::2",
        "2001:470:20::2",
        "2a01:3a0:53:53::0",
        "2a09::",
        "2a09::1",
        "2405:8a00:8001::20",
        "2607:5300:60:be0::1",
        "2607:5300:60:b24::1",
        "2a01:4f8:151:34aa::198",
        "2a01:4f8:141:316d::117",
        "2001:470:b411:80:6065:33ff:fe31:3831",
        "2606:4700:4700::1112",
        "2606:4700:4700::1002",
        "2606:4700:4700::1113",
        "2606:4700:4700::1003",
        "2620:10A:80BB::10",
        "2620:10A:80BC::10",
        "2620:10A:80BB::20",
        "2620:10A:80BC::20",
        "2620:10A:80BB::30",
        "2620:10A:80BC::30",
        "2A02:2F0F:191:53::35",
        "2001:8d8:1801:80bb::1",
        "240c::6666",
        "240c::6644",
    ]
    .into_iter()
    .map(str::to_owned)
    .collect()
}
